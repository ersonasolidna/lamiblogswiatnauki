# Łamiblog 2025-01-04 "Przełomowo bis" https://penszko.blog.polityka.pl/2025/01/04/przelomowo-bis/
# jest jedno rozwiązanie:
# 6 3 7
# 4 2 8
# 5 9 10

import time
import math
import itertools

def generate_9_number_sets():
    """
    Generator wszystkich zbiorów 9 liczb, które razem wykorzystują
    dokładnie wszystkie cyfry 0–9 (każdą raz).
    
    Założenia:
      - dokłądnie jedna liczba jest dwucyfrowa,
      - nie ma wiodących zer w liczbach dwucyfrowych.
    
    Funkcja zwraca obiekty typu `frozenset`, aby były niezmienne i
    możliwe do ewentualnego użycia jako klucze w słownikach, itp.
    (Zwykły `set` też jest ok, jeśli nie potrzebujesz niemutowalnych struktur.)
    """
    digits = set(range(10))  # {0,1,2,3,4,5,6,7,8,9}

    for tens in range(1, 10):       # dziesiątki: 1..9 (bez zera na początku)
        for ones in range(10):      # jedności: 0..9
            if ones != tens:
                two_digit_num = 10 * tens + ones  # np. 12, 45, 90, itd.
                
                # Zbiór cyfr zużytych przez tę liczbę dwucyfrową
                used_digits = {tens, ones}
                
                # Reszta cyfr stanie się jednocyfrowymi liczbami
                single_digit_nums = digits - used_digits  # 8 cyfr
                
                # Tworzymy zbiór (1 dwucyfrowa + 8 jednocyfrowych)
                the_set = frozenset([two_digit_num]) | single_digit_nums
                
                yield the_set

def main():

    start_time = time.time()
    all_sets = list(generate_9_number_sets())
    
    # Pokażmy pierwszych kilka zbiorów (kolejność będzie przypadkowa):
    numset = 0
    j=0
    for s in all_sets:
        numset = numset+1
        print("Set nr ",numset,":",s)
        for a in s:
            for b in s:
                if a!=b:
                    for c in s:
                        if a!=c and b!=c and a+b-c == 2:
                            for d in s:
                                if a!=d and b!=d and c!=d:
                                    for g in s:
                                        if g!=0:
                                            if a!=g and b!=g and c!=g and d!=g and (a+d)/g==2:
                                                for e in s:
                                                    if a!=e and b!=e and c!=e and d!=e and g!=e:
                                                        for f in s: 
                                                            if a!=f and b!=f and c!=f and d!=f and g!=f and e!=f and d*e-f==0:
                                                                for h in s:
                                                                    if h != 0:
                                                                        if a!=h and b!=h and c!=h and d!=h and g!=h and e!=h and f!=h and round(abs((b-e)/h))==0:
                                                                            for i in s:
                                                                                if a!=i and b!=i and c!=i and d!=i and g!=i and e!=i and f!=i and h!=i and c+f+i==25 and g+h+i==24:
                                                                                    j = j +1
                                                                                    print(a,b,c)
                                                                                    print(d,e,f)
                                                                                    print(g,h,i)
                                                                                    print(abs((b-e)/h))

    print("Liczba takich zbiorów:", len(all_sets))
    print("Liczba rozwiązań:",j)
    print("--- %s seconds ---" % (time.time() - start_time))
    
if __name__ == "__main__":
    main()